package org.devoware.table.model;

import static org.devoware.table.dice.Die.*;
import static org.devoware.table.model.FormattedValue.newFormattedValue;
import static org.devoware.table.model.ValueRangeMap.newValueRangeMap;

public final class LocationBasedAdventures {

	public static final ValueRangeMap DUNGEON_GOALS = newValueRangeMap(D20)
			.with(1, "Stop the dungeon's monstrous inhabitants from raiding the surface world.")
			.with(2, "Foil a villain's evil scheme.")
			.with(3, "Destroy a magical threat inside the dungeon.")
			.with(4, "Acquire treasure.")
			.with(5, "Find a particular item for a specific purpose.")
			.with(6, "Retrieve a stolen item hidden in the dungeon.")
			.with(7, "Find information needed for a special purpose.")
			.with(8, "Rescue a captive.")
			.with(9, "Discover the fate of a previous adventuring party.")
			.with(10, "Find an NPC who disappeared in the area.")
			.with(11, "Slay a dragon or some other challenging monster.")
			.with(12, "Discover the nature and origin of a strange location or phenomenon.")
			.with(13, "Pursue fleeing foes taking refuge in the dungeon.")
			.with(14, "Escape from captivity in the dungeon.")
			.with(15, "Clear a ruin so it can be rebuilt and reoccupied.")
			.with(16, "Discover why a villain is interested in the dungeon.")
			.with(17, "Win a bet to complete a rite of passage by surviving in the dungeon for a certain amount of time.")
			.with(18, "Parley with a villain in the dungeon.")
			.with(19, "Hide from a threat outside the dungeon.")
			.withRollMultiple(20, 2)
			.build();
	
	public static final ValueRangeMap WILDERNESS_GOALS = newValueRangeMap(D20)
			.with(1, newFormattedValue("Locate a dungeon or other site of interest - %s.", DUNGEON_GOALS))
			.with(2, "Assess the scope of a natural or unnatural disaster.")
			.with(3, "Escort an NPC to a destination.")
			.with(4, "Arrive at a destination without being seen by the villain's forces.")
			.with(5, "Stop monsters from raiding caravans and farms.")
			.with(6, "Establish trade with a distant town.")
			.with(7, "Protect a caravan traveling to a distant town.")
			.with(8, "Map a new land.")
			.with(9, "Find a place to establish a colony.")
			.with(10, "Find a natural resource.")
			.with(11, "Hunt a specific monster.")
			.with(12, "Return home from a distant place.")
			.with(13, "Obtain information from a reclusive hermit.")
			.with(14, "Find an object that was lost in the wilds.")
			.with(15, "Discover the fate of a missing group of explorers.")
			.with(16, "Pursue fleeing foes.")
			.with(17, "Assess the size of an approaching army.")
			.with(18, "Escape the reign of a tyrant.")
			.with(19, "Protect a wilderness site from attackers.")
			.withRollMultiple(20, 2)
			.build();

	public static final ValueRangeMap OTHER_GOALS = newValueRangeMap(D12)
			.with(1, "Seize control of a fortified location, such as a fortress, town, or ship")
			.with(2, "Defend a location from attackers.")
			.with(3, "Retrieve an object from inside a secure location in a settlement.")
			.with(4, "Retrieve an object from a caravan.")
			.with(5, "Salvage an objeect or goods from a lost vessel or caravan.")
			.with(6, "Break a prisoner out of a jail or prison camp.")
			.with(7, "Escape from a jail or prison camp.")
			.with(8, "Successfully travel through an obstacle course to gain recognition or reward.")
			.with(9, "Infiltrate a fortified location.")
			.with(10, "Find the source of strange occurrences in a haunted house or other location.")
			.with(11, "Interfere with the operation of a business.")
			.with(12, "Rescue a character, monster, or object from a natural or unnatural disaster.")
			.build();

	public static final ValueRangeMap RANDOM_GOALS = newValueRangeMap(D6)
			.with(1, 2, DUNGEON_GOALS)
			.with(3, 4, WILDERNESS_GOALS)
			.with(5, 6, OTHER_GOALS)
			.build();

	public static final ValueRangeMap ADVENTURE_VILLAINS = newValueRangeMap(D20)
			.with(1, "Beast or monstrosity with no particular agenda")
			.with(2, "Aberration bent on corruption or domination")
			.with(3, "Fiend bent on corruption or destruction")
			.with(4, "Dragon bent on domination and plunder")
			.with(5, "Giant bent on plunder")
			.with(6, 7, "Undead with any agenda")
			.with(8, "Fey with a mysterious goal")
			.with(9, 10, "Humanoid cultist")
			.with(11, 12, "Humanoid conqueror")
			.with(13, "Humanoid seeking revenge")
			.with(14, 15, "Humanoid schemer seeking to rule")
			.with(16, "Humanoid criminal mastermind")
			.with(17, 18, "Humanoid raider or ravage")
			.with(19, "Humanoid under a curse")
			.with(20, "Misguided humanoid zealot")
			.build();

	public static final ValueRangeMap ADVENTURE_ALLIES = newValueRangeMap(D12)
			.with(1, "Skilled adventurer")
			.with(2, "Inexperienced adventurer")
			.with(3, "Enthusiastic commoner")
			.with(4, "Soldier")
			.with(5, "Priest")
			.with(6, "Sage")
			.with(7, "Revenge seeker")
			.with(8, "Raving lunatic")
			.with(9, "Celestial ally")
			.with(10, "Fey ally")
			.with(11, "Disguised monster")
			.with(12, "Villain posing as an ally")
			.build();

	public static final ValueRangeMap ADVENTURE_PATRONS = newValueRangeMap(D20)
			.with(1, 2, "Retired adventurer")
			.with(3, 4, "Local ruler")
			.with(5, 6, "Military officer")
			.with(7, 8, "Temple official")
			.with(9, 10, "Sage")
			.with(11, 12, "Respected elder")
			.with(13, "Deity or celestial")
			.with(14, "Mysterious fey")
			.with(15, "Old friend")
			.with(16, "Former teacher")
			.with(17, "Parent or other family member")
			.with(18, "Desperate commoner")
			.with(19, "Embattled merchant")
			.with(20, "Villain posing as a patron")
			.build();

	public static final ValueRangeMap ADVENTURE_INTRODUCTION = newValueRangeMap(D12)
			.with(1, "While traveling in the wilderness, the characters fall into a sinkhole that opens beneath their feet, dropping them into the adventure location.")
			.with(2, "While traveling in the wilderness, the characters notice the entrance to the adventure location.")
			.with(3, "While traveling on a road, the characters are attacked by monsters that flee into the nearby adventure location")
			.with(4, "The adventurers find a map on a dead body. In addition to the map setting up the adventure, the adventure's villain wants the map.")
			.with(5, "A mysterious magic item or a cruel villain teleports the characters to the adventure location.")
			.with(6, "A stranger approaches the characters in a tavern and urges them towards the adventure location.")
			.with(7, "A town or village needs volunteers to go to the adventure location.")
			.with(8, "An NPC the characters care about needs them to go to the adventure location.")
			.with(9, "An NPC the characters must obey orders them to go to the adventure location.")
			.with(10, "An NPC the characters respect asks them to go to the adventure location.")
			.with(11, "One night, the characters all dream about entering the adventure location.")
			.with(12, "A ghost appears and terrorizes a village. Research reveals that it can only be put to rest by entering the adventure location.")
			.build();

	public static final ValueRangeMap ADVENTURE_CLIMAX = newValueRangeMap(D12)
			.with(1, "The adventurers confront the main villain and a group of minions in a bloody battle to the finish.")
			.with(2, "The adventurers chase the villain while dodging obstacles designed to thwart them, leading to a final confrontation in or outside the villain's refuge.")
			.with(3, "The actions of the adventurers or the villain result in a cataclysmic event that the adventurers must escape.")
			.with(4, "The adventurers race to the site where the villain is bringing a master plan to its conclusion, arriving just as that plan is about to be completed.")
			.with(5, "The villain and two or three lieutenants perform separate rites in a large room.  The adventurers must disrupt all the rites at the same time.")
			.with(6, "An ally betrays the adventurers as they're about to achieve their goal (use this climaxe carefully and don't overuse it).")
			.with(7, "A portal opens to another plane of existence. Creatures on the other side spill out, forcing the adventurers to close the portal and deal with the villain at the same time.")
			.with(8, "Traps, hazards, or animated objects turn against the adventurers while the main villain attacks.")
			.with(9, "The dungeon begins to collapse while the adventurers face the main villain, who attempts to escape in the chaos.")
			.with(10, "A threat more powerful than the adventurers appears, destroys the main villain, and then turns its attention on the characters.")
			.with(11, "The adventurers must choose whether to pursue the fleeing main villain or save an NPC they care about and a group of innocents.")
			.with(12, "The adventurers must discover the main villain's secret weakness before they can hope to defeat that villain.")
			.build();
	
	public static final ValueRangeMap FRAMING_EVENTS = newValueRangeMap(D100)
			.with(1, 2, "Anniversary of a monarch's reign")
			.with(3, 4, "Anniversary of an important event")
			.with(5, 6, "Arena event")
			.with(7, 8, "Arrival of a caravan or ship")
			.with(9, 10, "Arrival of a circus")
			.with(11, 12, "Arrival of an important NPC")
			.with(13, 14, "Arrival of marching modrons")
			.with(15, 16, "Artistic performance")
			.with(17, 18, "Athletic event")
			.with(19, 20, "Birth of a child")
			.with(21, 22, "Birthday of an important NPC")
			.with(23, 24, "Civic festival")
			.with(25, 26, "Comet appearance")
			.with(27, 28, "Commemoration of a past tragedy")
			.with(29, 30, "Consecration of a new temple")
			.with(31, 32, "Coronation")
			.with(33, 34, "Council meeting")
			.with(35, 36, "Equinox or solstice")
			.with(37, 38, "Execution")
			.with(39, 40, "Fertility festival")
			.with(41, 42, "Full moon")
			.with(43, 44, "Funeral")
			.with(45, 46, "Graduation of cadets or wizards")
			.with(47, 48, "Harvest fesitval")
			.with(49, 50, "Holy day")
			.with(51, 52, "Investiture of a knight or other noble")
			.with(53, 54, "Lunar eclipse")
			.with(55, 58, "Midsummer festival")
			.with(59, 60, "Midwinter festival")
			.with(61, 62, "Migration of monsters")
			.with(63, 64, "Monarch's ball")
			.with(65, 66, "New moon")
			.with(67, 68, "New year")
			.with(69, 70, "Pardoning of a prisoner")
			.with(71, 72, "Planar conjunction")
			.with(73, 74, "Planetary alignment")
			.with(75, 76, "Priestly investiture")
			.with(77, 78, "Procession of ghosts")
			.with(79, 80, "Remembrance of soldiers lost in war")
			.with(81, 82, "Royal address or proclamation")
			.with(83, 84, "Royal audience day")
			.with(85, 86, "Signing of a treaty")
			.with(87, 88, "Solar eclipse")
			.with(89, 91, "Tournament")
			.with(92, 94, "Trial")
			.with(95, 96, "Violent uprising")
			.with(97, 98, "Wedding or wedding anniversary")
			.withRollMultipleAndIgnore2(99, 100, 2, 99, 100)
			.build();
	
	public static final ValueRangeMap MORAL_QUANDARIES = newValueRangeMap(D20)
			.with(1, 3, "Ally quandary - The adventurers have a better chance of achieving their goal with the help of two individuals whose expertise is all but essential.  However, these two NPCs hate each other and refuse to work together even if the fate of the world hangs in the balance.  The adventurers must choose the NPC that is most likely to help them accomplish their goal.")
			.with(4, 6, "Friend quandary - An NPC that one or more of the characters cares about makes an impossible demand on the characters. A love interest might demand that a character turn away from a dangerous quest.  A dear friend might plead with the characters to spare the villain's life to prove that they are better than the villain. A weak NPC might beg for a chance to win favor from the characters by undertaking a dangerous but essential mission.")
			.with(7, 12, "Honor quandary - A character is forced to choose between victory and a personal oath or code of honor. A paladin who has sworn the Oath of Virtue might realize that the clearest path to success lies in deceipt and subterfuge. A loyal cleric might be tempted to disobey the orders of his or her faith. If you present this quandary, be sure to provide an opportunity for a character to atone for violating his or her oath.")
			.with(13, 16, "Rescue quandary - The adventurers must choose between catching or hurting the villain or saving innocent lives. For example, the adventurers might learn that the villain is camped nearby, but they also learn that another part of the villain's forces is about to march into a village and burn it to the ground. The characters must choose between taking out the villain or protecting innocent villagers, some of whom might be friends or family members.")
			.with(17, 20, "Respect quandary - Two important allies give conflicting directions or advice to the adventurers. Perhaps the high priest councils the characters to negotiate peace with militaristic elves in the nearby forest, while a veteran warrior urges them to prove their strength with a decisive first strike. The adventurers can't follow both courses, and whichever ally they choose, the other loses respect for them and might no longer aid them.")
			.build();

	public static final ValueRangeMap TWISTS = newValueRangeMap(D10)
			.with(1, "The adventurers are racing against other creatures with the same or opposite goal.")
			.with(2, "The adventurers become responsible for the safety of a noncombatant NPC.")
			.with(3, "The adventurers are prohibited from killing the villain, but the villain has no compunctions about killing them.")
			.with(4, "The adventurers have a time limit.")
			.with(5, "The advaneturers have recieved false or extraneous information.")
			.with(6, "Completing an adventure goal fulfills a prophesy or prevents the fulfillment of a prophesy.")
			.with(7, "The adventurers have two different goals, but they can complete only one.")
			.with(8, "Completing the goal secretly helps the villain.")
			.with(9, "The adventurers must cooperate with a known villain to achieve the goal.")
			.with(10, "The adventurers are under magical compulsion (such as a geas spell) to complete their goal.")
			.build();
	
	public static final ValueRangeMap SIDE_QUESTS = newValueRangeMap(D8)
			.with(1, "Find a specific item rumored to be in the area.")
			.with(2, "Retrieve a stolen item in the villain's possession.")
			.with(3, "Receive information from an NPC in the area.")
			.with(4, "Rescue a captive.")
			.with(5, "Discover the fate of a missing NPC.")
			.with(6, "Slay a specific monster.")
			.with(7, "Discover the nature and origin of a strange phenomenon in the area.")
			.with(8, "Secure the aid of a character or creature in the area.")
			.build();

	private LocationBasedAdventures () {}
}
